<?xml version="1.0" encoding="UTF-8"?>
<project name="dst2_sample" default="build" basedir=".">

	<property environment="env" />
	<property name="glassfish.home" value="${env.GLASSFISH_HOME}" />
	<property name="domain.dir" value="${glassfish.home}/domains/domain1" />
	<property name="admin.cli.jar" value="${glassfish.home}/modules/admin-cli.jar" />
	<property name="lib.dir" value="lib" />
	<property name="client.dir" value="1_ejb_ws/client" />
	<property name="server.dir" value="1_ejb_ws/server" />
	<property name="setup.dir" value="1_ejb_ws/setup" />
	<property name="datasourceFile.name" value="dst-ds.xml" />

	<property name="ejb.server.buildFile" value="${server.dir}/build.xml" />
	<property name="ejb.client.buildFile" value="${client.dir}/build.xml" />

    <property name="injection.dir" value="2_injection"/>
    <property name="injection.agent.buildFile" value="${injection.dir}/agent/build.xml"/>
    <property name="injection.injector.buildFile" value="${injection.dir}/injector/build.xml"/>
    <property name="injection.sample.buildFile" value="${injection.dir}/sample/build.xml"/>
	
	<property name="zip.name" value="dst2_submission.zip" />

	<target name="check">
		<fail unless="env.GLASSFISH_HOME">
			#### You must install GlassFish V3 and set the GLASSFISH_HOME variable
		</fail>
	</target>

	<target name="setup" depends="check">
		<copy file="${lib.dir}/mysql-connector-java-5.1.11-bin.jar" todir="${domain.dir}/lib/ext"/>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="add-resources ${setup.dir}/${datasourceFile.name}" />
		</java>
	</target>

	<!-- create the zip file: -->
	<target name="zip" depends="clean">
		<delete file="${zip.name}" />
		<zip destfile="${zip.name}">
			<fileset dir="${basedir}" />
		</zip>
	</target>
	
	<!-- generate the WS client classes (needs to be re-run after each change in the service interface): -->
	<target name="ws-import-client">
		<ant antfile="${ejb.client.buildFile}" inheritAll="false" target="ws-import" />
	</target>

	
	<!-- build projects: -->
	<target name="build" depends="build-ejb-server,build-ejb-client" />

	<target name="build-ejb-server">
		<ant antfile="${ejb.server.buildFile}" inheritAll="false" target="dist" />
	</target>
	
	<target name="build-ejb-client">
		<ant antfile="${ejb.client.buildFile}" inheritAll="false" target="compile" />
	</target>
	
	
	<!-- deployment -->
	<target name="deploy-ejb" depends="build-ejb-server">
		<ant antfile="${ejb.server.buildFile}" inheritAll="false" target="deploy" />
	</target>
	<target name="undeploy-ejb">
		<ant antfile="${ejb.server.buildFile}" inheritAll="false" target="undeploy" />
	</target>
	<target name="redeploy-ejb" depends="undeploy-ejb,deploy-ejb" />

	<!-- running applications -->
	<target name="run-ejb-client" depends="build">
		<ant antfile="${ejb.client.buildFile}" inheritAll="false" target="run" />
	</target>

    <target name="build-injection-projects">
        <ant antfile="${injection.injector.buildFile}" inheritAll="false" target="dist"/>
        <ant antfile="${injection.agent.buildFile}" inheritAll="false" target="dist"/>
        <ant antfile="${injection.sample.buildFile}" inheritAll="false" target="compile"/>
    </target>

	
    <target name="run-inj" depends="build-injection-projects">
        <ant antfile="${injection.sample.buildFile}" inheritAll="false" target="run"/>
    </target>

    <target name="run-inj-with-agent" depends="build-injection-projects">
        <ant antfile="${injection.sample.buildFile}" inheritAll="false" target="run-with-agent"/>
    </target>
	
	<!-- clean build artifacts: -->
	<target name="clean">
		<ant antfile="${ejb.server.buildFile}" inheritAll="false" target="clean" />
		<ant antfile="${ejb.client.buildFile}" inheritAll="false" target="clean" />

		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="delete-jdbc-connection-pool --cascade=true dst_pool" />
		</java>
		
    <ant antfile="${injection.injector.buildFile}" inheritAll="false" target="clean"/>
    <ant antfile="${injection.agent.buildFile}" inheritAll="false" target="clean"/>
    <ant antfile="${injection.sample.buildFile}" inheritAll="false" target="clean"/>
		
	</target>

</project>
